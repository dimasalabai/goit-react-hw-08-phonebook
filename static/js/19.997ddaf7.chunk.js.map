{"version":3,"file":"static/js/19.997ddaf7.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/PhoneBook/PhoneBookForm/phone-book-form.module.css?756d","components/PhoneBook/PhoneBookForm/PhoneBookForm.jsx","webpack://react-homework-template/./src/components/PhoneBook/Contacts/Filter/filter.module.css?e672","components/PhoneBook/Contacts/Filter/Filter.jsx","redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/PhoneBook/Contacts/contacts.module.css?eb6b","components/PhoneBook/Contacts/Contacts.jsx","webpack://react-homework-template/./src/pages/PhoneBookPage/phone-book-page.module.css?5867","pages/PhoneBookPage/PhoneBookPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"phone-book-form_form__tzC35\",\"formGroup\":\"phone-book-form_formGroup__t11hj\",\"formInput\":\"phone-book-form_formInput__4XZcg\",\"btn\":\"phone-book-form_btn__ey4tR\"};","import { nanoid } from 'nanoid';\nimport { useMemo, useState, memo, useCallback } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { addContact } from '../../../redux/contacts/contacts-operations';\n\nimport styles from './phone-book-form.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nconst PhoneBookForm = () => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  // ============================================\n\n  const dispatch = useDispatch();\n\n  const onAddСontact = data => {\n    // data - state форми\n\n    dispatch(addContact(data));\n\n    resetForm();\n  };\n  // ============================================\n\n  const handleChange = useCallback(({ target }) => {\n    const { name, value } = target;\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  }, []);\n\n  const resetForm = () => {\n    setState({ ...INITIAL_STATE });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onAddСontact({ ...state });\n  };\n\n  const contactsName = useMemo(() => nanoid(), []);\n  const contactsPhone = useMemo(() => nanoid(), []);\n\n  const { name, number } = state;\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <div className={styles.formGroup}>\n        <label htmlFor={contactsName}>Name</label>\n        <input\n          value={name}\n          onChange={handleChange}\n          id={contactsName}\n          type=\"text\"\n          name=\"name\"\n          required\n          placeholder=\"Name\"\n          className={styles.formInput}\n        />\n      </div>\n      <div className={styles.formGroup}>\n        <label htmlFor={contactsPhone}>Number</label>\n        <input\n          value={number}\n          onChange={handleChange}\n          id={contactsPhone}\n          type=\"tel\"\n          name=\"number\"\n          required\n          placeholder=\"Phone\"\n          className={styles.formInput}\n        />\n      </div>\n      <button type=\"submit\" className={styles.btn}>\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default memo(PhoneBookForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"filter_formGroup__rKE1-\"};","import { useDispatch } from 'react-redux';\n\nimport { nanoid } from 'nanoid';\n\nimport { setFilter } from '../../../../redux/filter/filter-slice';\n\nimport styles from './filter.module.css';\n\nconst Filter = () => {\n  const search = nanoid();\n  const dispatch = useDispatch();\n  const changeFilter = ({ target }) => dispatch(setFilter(target.value));\n\n  return (\n    <div className={styles.formGroup}>\n      <label htmlFor={search}> Search contacts by name or phone</label>\n      <input\n        id={search}\n        onChange={changeFilter}\n        name=\"filter\"\n        placeholder=\"Search\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","export const selectAllContacts = store => store.contacts.items;\n\nexport const selectFilteredContacts = store => {\n  const { contacts, filter } = store;\n  const { items, isLoading, error } = contacts;\n\n  if (!filter) {\n    return contacts;\n  }\n  const normalizedFilter = filter.toLowerCase();\n\n  const filteredContacts = items.filter(({ name, number }) => {\n    const normalizedName = name.toLowerCase();\n    const normalizedPhone = number.toLowerCase();\n\n    return (\n      normalizedName.includes(normalizedFilter) ||\n      normalizedPhone.includes(normalizedFilter)\n    );\n  });\n\n  return {\n    items: filteredContacts,\n    isLoading,\n    error,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"contacts_wrapper__MjklY\"};","import { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectFilteredContacts } from '../../../redux/contacts/contacts-selectors';\n\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../../redux/contacts/contacts-operations';\n\nimport styles from './contacts.module.css';\n\nconst Contacts = () => {\n  const { items, isLoading, error } = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteСontact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const contactsItems = items.map(({ id, name, number }) => {\n    return (\n      <li key={id}>\n        {name}: {number}\n        <button onClick={() => onDeleteСontact(id)} type=\"button\">\n          Delete\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className={styles.wrapper}>\n      {isLoading && <p>...Loading</p>}\n      {error && <p>{error}</p>}\n      {Boolean(items.length) && <ul>{contactsItems}</ul>}\n    </div>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"phone-book-page_wrapper__YWagm\"};","import PhoneBookForm from '../../components/PhoneBook/PhoneBookForm/PhoneBookForm';\nimport Filter from '../../components/PhoneBook/Contacts/Filter/Filter';\nimport Contacts from '../../components/PhoneBook/Contacts/Contacts';\n\nimport styles from './phone-book-page.module.css';\n\nconst PhoneBookPage = () => {\n  return (\n    <div className={styles.wrapper}>\n      <h2>Phonebook</h2>\n      <PhoneBookForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </div>\n  );\n};\n\nexport default PhoneBookPage;\n"],"names":["INITIAL_STATE","name","number","PhoneBookForm","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","dispatch","useDispatch","handleChange","useCallback","_ref","target","value","prevState","_defineProperty","resetForm","contactsName","useMemo","nanoid","contactsPhone","_jsxs","onSubmit","e","data","preventDefault","addContact","className","styles","children","_jsx","htmlFor","onChange","id","type","required","placeholder","memo","search","setFilter","selectFilteredContacts","store","contacts","filter","items","isLoading","error","normalizedFilter","toLowerCase","normalizedName","normalizedPhone","includes","_useSelector","useSelector","useEffect","fetchContacts","contactsItems","map","onClick","deleteContact","onDeleteСontact","Boolean","length","Filter","Contacts"],"sourceRoot":""}